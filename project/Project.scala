import sbt._
import Keys._
import com.typesafe.startscript.StartScriptPlugin

object NrvBuild extends Build {
  val PROJECT_NAME = "nrv"

  var commonResolvers = Seq(
    "Maven.org" at "http://repo1.maven.org/maven2",
    "Sun Maven2 Repo" at "http://download.java.net/maven/2",
    "Scala-Tools" at "http://scala-tools.org/repo-releases/",
    "Sun GF Maven2 Repo" at "http://download.java.net/maven/glassfish",
    "Oracle Maven2 Repo" at "http://download.oracle.com/maven",
    "Sonatype" at "http://oss.sonatype.org/content/repositories/release",
    "Cloudera" at "https://repository.cloudera.com/artifactory/cloudera-repos/",
    "Scallop" at "http://mvnrepository.com/"
  )

  var commonDeps = Seq(
    "org.slf4j" % "slf4j-nop" % "1.6.4",
    "com.yammer.metrics" %% "metrics-scala" % "2.1.2",
    "io.netty" % "netty" % "3.5.0.Final" withSources(),
    "org.scalatest" %% "scalatest" % "1.7.1" % "test,it",
    "junit" % "junit" % "4.10" % "test,it",
    "org.mockito" % "mockito-core" % "1.9.0" % "test,it"
  )

  var zookeeperDeps = Seq(
    "org.apache.zookeeper" % "zookeeper" % "3.4.3-cdh4.1.1" exclude("javax.jms", "jms") exclude("com.sun.jmx", "jmxri") exclude("com.sun.jdmk", "jmxtools"),
    "com.google.guava" % "guava" % "12.0",
    "org.rogach" %% "scallop" % "0.6.0"
  )

  var scribeDeps = Seq(
    "org.apache.thrift" % "libthrift" % "0.6.1",
    "org.apache.thrift" % "libfb303" % "0.6.1"
  )

  var extDeps = Seq(
    "net.liftweb" %% "lift-json" % "2.4-RC1",
    "org.scalatest" %% "scalatest" % "1.7.1",
    "junit" % "junit" % "4.10",
    "org.mockito" % "mockito-core" % "1.9.0"
  )

  val defaultSettings = Defaults.defaultSettings ++ Defaults.itSettings ++ Seq(
    libraryDependencies ++= commonDeps,
    resolvers ++= commonResolvers,
    retrieveManaged := true,
    publishMavenStyle := true,
    organization := "com.wajam",
    version := "0.1-SNAPSHOT"
  )

  lazy val root = Project(PROJECT_NAME, file("."))
    .configs(IntegrationTest)
    .settings(defaultSettings: _*)
    .settings(testOptions in IntegrationTest := Seq(Tests.Filter(s => s.contains("Test"))))
    .settings(StartScriptPlugin.startScriptForClassesSettings: _*)
    .aggregate(core)
    .aggregate(ext)
    .aggregate(zookeeper)
    .aggregate(scribe)

  lazy val core = Project(PROJECT_NAME + "-core", file(PROJECT_NAME + "-core"))
    .configs(IntegrationTest)
    .settings(defaultSettings: _*)
    .settings(testOptions in IntegrationTest := Seq(Tests.Filter(s => s.contains("Test"))))

  lazy val ext = Project(PROJECT_NAME + "-extension", file(PROJECT_NAME + "-extension"))
    .configs(IntegrationTest)
    .settings(defaultSettings: _*)
    .settings(libraryDependencies ++= extDeps)
    .settings(testOptions in IntegrationTest := Seq(Tests.Filter(s => s.contains("Test"))))
    .dependsOn(core)

  lazy val zookeeper = Project(PROJECT_NAME + "-zookeeper", file(PROJECT_NAME + "-zookeeper"))
    .configs(IntegrationTest)
    .settings(defaultSettings: _*)
    .settings(libraryDependencies ++= zookeeperDeps)
    .settings(testOptions in IntegrationTest := Seq(Tests.Filter(s => s.contains("Test"))))
    .settings(parallelExecution in IntegrationTest := false)
    .settings(StartScriptPlugin.startScriptForClassesSettings: _*)
    .dependsOn(core)

  lazy val scribe = Project(PROJECT_NAME + "-scribe", file(PROJECT_NAME + "-scribe"))
    .configs(IntegrationTest)
    .settings(defaultSettings: _*)
    // We don't publish docs because it doesn't work with java generated by thrift
    .settings(publishArtifact in packageDoc := false)
    .settings(libraryDependencies ++= scribeDeps)
    .settings(testOptions in IntegrationTest := Seq(Tests.Filter(s => s.contains("Test"))))
    .settings(parallelExecution in IntegrationTest := false)
    .dependsOn(core)
}

